internal class Program
{
    private static void Main(string[] args)
    {
        Zoo zoo = new Zoo();
        zoo.ShowMenu();
    }
}

public class Animal
{
    public Animal(string name, string genders, string sound)
    {
        Name = name;
        Genders = genders;
        Sound = sound;
    }

    public string Name { get; private set; }
    public string Genders { get; private set; }
    public string Sound { get; private set; }
}

public abstract class AnimalFactory
{
    public abstract Animal CreateAnimal(string gender);
}

public class LionFactory : AnimalFactory
{
    public override Animal CreateAnimal(string gender)
    {
        return new Animal("Лев", gender, "Ррррр");
    }
}

public class MonkeyFactory : AnimalFactory
{
    public override Animal CreateAnimal(string gender)
    {
        return new Animal("Обезьяна", gender, "У-у-а-а");
    }
}

public class ElephantFactory : AnimalFactory
{
    public override Animal CreateAnimal(string gender)
    {
        return new Animal("Слон", gender, "Трууу");
    }
}

public class PenguinFactory : AnimalFactory
{
    public override Animal CreateAnimal(string gender)
    {
        return new Animal("Пингвин", gender, "Кря");
    }
}

public class Aviary
{
    private List<Animal> _animals = new List<Animal>();

    public Aviary(string name, List<Animal> animals)
    {
        _animals = animals;
        Name = name;
    }

    public string Name { get; private set; }

    public void ShowInfo()
    {
        Console.WriteLine($"В этом вольере обитают - {Name}. Количество животных - {_animals.Count}.");

        foreach (var animal in _animals)
        {
            Console.WriteLine($"Животное: {animal.Name}, пол - {animal.Genders}, издает звук - {animal.Sound}.");
        }
    }
}

public class Zoo
{
    private List<Aviary> _aviaries;

    public Zoo()
    {
        _aviaries = new List<Aviary>();
        AddAnimals();
    }

    private void AddAnimals()
    {
        Random random = new Random();

        List<AnimalFactory> animalFactories = new List<AnimalFactory>
        {
            new LionFactory(),
            new MonkeyFactory(),
            new ElephantFactory(),
            new PenguinFactory()
        };

        foreach (var factory in animalFactories)
        {
            List<Animal> animals = new List<Animal>();

            string[] genders = new string[] { "Самец", "Самка" };
            int minNumberAnimal = 2;
            int maxNumberAnimal = 8;
            int countAnimals = random.Next(minNumberAnimal, maxNumberAnimal);

            for (int i = 0; i < countAnimals; i++)
            {
                string gender = genders[random.Next(genders.Length)];
                animals.Add(factory.CreateAnimal(gender));
            }

            _aviaries.Add(new Aviary(animals[0].Name, animals));
        }
    }

    public void ShowMenu()
    {
        const string CommandShowAviaryLions = "1";
        const string CommandShowAviaryMonkeys = "2";
        const string CommandShowAviaryElephants = "3";
        const string CommandShowAviaryPenguins = "4";
        const string CommandExit = "5";

        bool isZooOpen = true;

        while (isZooOpen)
        {
            Console.WriteLine("Добро пожаловать в зоопарк!");
            Console.WriteLine("Выбери вольер для посещения: ");
            Console.WriteLine($"{CommandShowAviaryLions} - Посетить вольер со львами.");
            Console.WriteLine($"{CommandShowAviaryMonkeys} - Посетить вольер с обезьянами.");
            Console.WriteLine($"{CommandShowAviaryElephants} - Посетить вольер со слонами.");
            Console.WriteLine($"{CommandShowAviaryPenguins} - Посетить вольер с пингвинами.");
            Console.WriteLine($"{CommandExit} - Выйти из зоопарка.");
            string input = Console.ReadLine();

            if (int.TryParse(input, out int index) && index > 0 && index <= _aviaries.Count)
            {
                _aviaries[index - 1].ShowInfo();
            }
            else if(input == CommandExit)
            {
                isZooOpen = false;
                Console.WriteLine("Вы вышли из зоопарка.");
            }
            else
            {
                Console.WriteLine("Некорректный ввод.");
            }

            Console.WriteLine("Нажмите любую клавишу чтобы выйти из вольера.");
            Console.ReadKey();
            Console.Clear();
        }
    }
}
